    ----------------------------------------------------------------------------------
    -- Company: 
    -- Engineer: 
    -- 
    -- Create Date: 18.10.2024 16:01:35
    -- Design Name: 
    -- Module Name: VGA_MONITOR - Behavioral
    -- Project Name: 
    -- Target Devices: 
    -- Tool Versions: 
    -- Description: 
    -- 
    -- Dependencies: 
    -- 
    -- Revision:
    -- Revision 0.01 - File Created
    -- Additional Comments:
    -- 
    ----------------------------------------------------------------------------------
    
    
    library IEEE;
    use IEEE.STD_LOGIC_1164.ALL;
    
    -- Uncomment the following library declaration if using
    -- arithmetic functions with Signed or Unsigned values
    --use IEEE.NUMERIC_STD.ALL;
    
    -- Uncomment the following library declaration if instantiating
    -- any Xilinx leaf cells in this code.
    --library UNISIM;
    --use UNISIM.VComponents.all;
    
    entity VGA_DRIVER is
    Port (
     clk : in STD_LOGIC; 
     reset : in STD_LOGIC; 
     RGBin : in STD_LOGIC_VECTOR (9 downto 0);
  
     VS : out STD_LOGIC; 
     HS : out STD_LOGIC; 
     
     RGB : out STD_LOGIC_VECTOR (11 downto 0));
    end VGA_DRIVER;
    
    architecture Behavioral of VGA_DRIVER is
        signal s1,s2,s3,s4,s5,s6,s7,s8,s9,s10 :std_logic;
        signal ejx,ejy :std_logic_vector (9 downto 0);
        signal raux,gaux,baux,rOUTaux,gOUTaux,bOUTaux :std_logic_vector (3 downto 0);
        
        component CONTADOR 
        Generic (Nbit: INTEGER := 10);
        Port ( 
            clk : in STD_LOGIC;
            reset : in STD_LOGIC; 
            resets : in STD_LOGIC; 
            enable : in STD_LOGIC;
            cuenta : out STD_LOGIC_VECTOR (Nbit-1 downto 0));
        end component;
        
       component FREC_PIXEL 
        Port ( clk : in STD_LOGIC;
               reset : in STD_LOGIC;
               sat : out STD_LOGIC);
        end component;
        
        component comparador is 
        Generic (Nbit:integer :=8; End_Of_Screen: integer :=10; Start_Of_Pulse: integer :=20; End_Of_Pulse: integer := 30; End_Of_Line: integer := 40); 
        Port (
            clk : in STD_LOGIC;
            reset : in STD_LOGIC; 
            data : in STD_LOGIC_VECTOR (Nbit-1 downto 0); 
            O1 : out STD_LOGIC; O2 : out STD_LOGIC; O3 : out STD_LOGIC); 
        end component;
    
        component gen_color  
        Port ( 
        blank_h : in STD_LOGIC; 
        blank_v : in STD_LOGIC; 
        RED_in : in STD_LOGIC_VECTOR (3 downto 0); 
        GRN_in : in STD_LOGIC_VECTOR (3 downto 0); 
        BLU_in : in STD_LOGIC_VECTOR (3 downto 0); 
        RED : out STD_LOGIC_VECTOR (3 downto 0); 
        GRN : out STD_LOGIC_VECTOR (3 downto 0); 
        BLU : out STD_LOGIC_VECTOR (3 downto 0)); 
        end component;
        
    component dibuja 
    Port( 
    eje_x : in STD_LOGIC_VECTOR (9 downto 0);
    eje_y : in STD_LOGIC_VECTOR (9 downto 0); 
    clk : in  std_logic;
    refresh: in  std_logic;
    reset : in  std_logic;
    RED : out STD_LOGIC_VECTOR(3 downto 0); 
    GRN : out STD_LOGIC_VECTOR(3 downto 0); 
    BLU : out STD_LOGIC_VECTOR(3 downto 0)); 
end component;

        
    begin
        s2 <= s1 and s7;
        HS <= s6;
        VS <= s8;
            frecpixel1 :FREC_PIXEL
            port map(
            clk => clk,
            reset => reset,
            sat => s1        
            );
            Conth : CONTADOR 
            generic map(
            Nbit => 10
            )
            port map (
            clk => clk,
            reset => reset,
            resets => s2,
            enable => s1,
            cuenta => ejx
            );
            Contv : CONTADOR 
            generic map(
            Nbit => 10
            )
            port map (
            clk => clk, 
            reset => reset,
            resets => s3,
            enable => s2,
            cuenta => ejy
            );
             Comph : comparador
        generic map(
            Nbit => 10, 
            End_Of_Screen => 639, 
            Start_Of_Pulse => 655, 
            End_Of_Pulse => 751, 
            End_Of_Line => 799
        )
        port map(
            clk => clk,
            reset => reset,
            data => ejx,
            O1 => s5,
            O2 => s6,
            O3 => s7
        );
            Compv : comparador
        generic map(
            Nbit => 10, 
            End_Of_Screen => 479, 
            Start_Of_Pulse => 489, 
            End_Of_Pulse => 491, 
            End_Of_Line => 520
        )
        port map(
            clk => clk,
            reset => reset,
            data => ejy,
            O1 => s9,
            O2 => s8,
            O3 => s3
        );               
            GenColor : gen_color 
            port map(
            blank_h =>s5, 
            blank_v =>s9,
            RED_in =>raux,
            GRN_in =>gaux, 
            BLU_in =>baux, 
            RED => rOUTaux,
            GRN => gOUTaux,
            BLU => bOUTaux
            );
            
            
            
            
        
    RGB <= rOUTaux & gOUTaux & bOUTaux;
    
    end Behavioral;
